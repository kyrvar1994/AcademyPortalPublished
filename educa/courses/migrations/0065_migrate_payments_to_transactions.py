# Generated by Django 5.0.7 on 2025-07-16 19:31

from django.db import migrations

def migrate_payments_to_transactions(apps, schema_editor):
    CoursePayment = apps.get_model('courses', 'CoursePayment')
    Transaction = apps.get_model('courses', 'Transaction')
    User = apps.get_model('auth','User')

    transaction_groups = {}

    for payment in CoursePayment.objects.all():
        if payment.transaction is not None:
            continue

        transaction_id = payment.old_transaction_id if hasattr(payment, 'old_transaction_id') else None
        student = payment.enrollment.student

        if not transaction_id:
            continue

        key = (transaction_id, student.id)

        if key not in transaction_groups:
            transaction_groups[key] = {
                'student': student,
                'transaction_id':transaction_id,
                'payments': [],
                'payment_date': payment.payment_date if hasattr(payment, 'payment_date') else None,
                'status': payment.status if hasattr(payment, 'status') else 'completed',
                'receipt_number': payment.receipt_number if hasattr(payment, 'receipt_number') else None
            }

        transaction_groups[key]['payments'].append(payment)

    for key, group in transaction_groups.items():
        payments = group['payments']
        if not payments:
            continue

        total_amount = sum(p.amount for p in payments)

        transaction = Transaction.objects.create(
            student=group['student'],
            transaction_id=group['transaction_id'],
            total_amount=total_amount,
            status=group['status'],
            payment_date=group['payment_date'],
        )

        if group['receipt_number']:
            transaction.receipt_number = group['receipt_number']
            transaction.save()

        for payment in payments:
            payment.transaction = transaction
            payment.save()

def reverse_migration(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0064_rename_transaction_id_coursepayment_old_transaction_id_and_more'),
    ]

    operations = [
        migrations.RunPython(migrate_payments_to_transactions, reverse_migration),
    ]
